import { ethers } from 'ethers'
import { config } from 'dotenv'
import * as path from 'path'
import * as fs from 'fs'

// Load environment variables
config({ path: path.resolve(__dirname, '../apps/backend/.env.local') })

const STORY_RPC_URL = 'https://aeneid.storyrpc.io'
const TIP_TOKEN_ADDRESS = '0xe5Cd6E2392eB0854F207Ad474ee9FB98d80C934E'

// HybridRevenueControllerV2 ABI and bytecode
const ABI = [
  {
    inputs: [
      { name: 'initialAdmin', type: 'address' },
      { name: '_tipToken', type: 'address' }
    ],
    stateMutability: 'nonpayable',
    type: 'constructor'
  }
]

// Bytecode from compiled contract
const BYTECODE = '0x608060405260466004556014600555600a6006553480156200001f575f80fd5b5060405162001a1f38038062001a1f833981016040819052620000429162000170565b6001600255620000535f83620000a8565b50620000807fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177583620000a8565b50600380546001600160a01b0319166001600160a01b039290921691909117905550620001a6565b5f828152602081815260408083206001600160a01b038516845290915281205460ff166200014b575f838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055620001023390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016200014e565b505f5b92915050565b80516001600160a01b03811681146200016b575f80fd5b919050565b5f806040838503121562000182575f80fd5b6200018d8362000154565b91506200019d6020840162000154565b90509250929050565b61186b80620001b45f395ff3fe608060405234801561000f575f80fd5b50600436106101e7575f3560e01c80637cd86d6011610109578063a217fddf1161009e578063e138818c1161006e578063e138818c1461053c578063ee132faa1461054f578063f674a94214610562578063ff6f9f821461056b575f80fd5b8063a217fddf1461045d578063b5b65e6b14610464578063c544851f146104e6578063d547741f14610529575f80fd5b806391d14854116100d957806391d148541461041b5780639bb7f9001461042e5780639ec56ef914610441578063a0e2850114610454575f80fd5b80637cd86d60146103d95780638456cb59146103ec57806385117005146103f45780638906af4814610413575f80fd5b8063248a9ca31161017f57806349e88aee1161014f57806349e88aee146103985780635c975abb146103a75780636f049e20146103b257806375b238fc146103c5575f80fd5b8063248a9ca3146103485780632f2ff15d1461036a57806336568abe1461037d5780633f4ba83a14610390575f80fd5b80630c0dee70116101ba5780630c0dee70146102685780631486e010146102e757806323c5b93f146102f057806324048ba11461033f575f80fd5b80630103fb01146101eb57806301a1fe881461020057806301ffc9a7146102265780630289105414610249575b5f80fd5b6101fe6101f936600461152c565b61059e565b005b61021361020e36600461157c565b6106b8565b6040519081526020015b60405180910390f35b6102396102343660046115a4565b6106e3565b604051901515815260200161021d565b6102136102573660046115d2565b600a6020525f908152604090205481565b6102b36102763660046115d2565b60076020525f908152604090208054600182015460028301546005909301546001600160a01b0383169360ff600160a01b90940484169390911685565b604080516001600160a01b03909616865293151560208601529284019190915260608301521515608082015260a00161021d565b61021360055481565b6103276102fe3660046115e9565b5f918252600760209081526040808420928452600390920190529020546001600160a01b031690565b6040516001600160a01b03909116815260200161021d565b610213600d5481565b6102136103563660046115d2565b5f9081526020819052604090206001015490565b6101fe610378366004611609565b610719565b6101fe61038b366004611609565b610743565b6101fe61077b565b6102136706f05b59d3b2000081565b60015460ff16610239565b600354610327906001600160a01b031681565b6102135f8051602061181683398151915281565b6101fe6103e7366004611633565b61079d565b6101fe610820565b610213610402366004611633565b60096020525f908152604090205481565b6101fe61083f565b610239610429366004611609565b610963565b6101fe61043c3660046115e9565b61098b565b6101fe61044f36600461164c565b610c05565b61021360045481565b6102135f81565b6104ac6104723660046115d2565b5f9081526007602052604090206005810154815460019092015460ff918216936001600160a01b03841693600160a01b9004909216918490565b6040805195151586526001600160a01b0390941660208601529115159284019290925260608301919091521515608082015260a00161021d565b6102396104f4366004611675565b6001600160a01b0383165f908152600b60209081526040808320858452825280832084845290915290205460ff169392505050565b6101fe610537366004611609565b610c87565b600c54610327906001600160a01b031681565b6101fe61055d3660046116a5565b610cab565b61021360065481565b610239610579366004611675565b600b60209081525f938452604080852082529284528284209052825290205460ff1681565b6105a6610ee4565b5f8381526007602052604090206005015460ff161561060c5760405162461bcd60e51b815260206004820152601760248201527f426f6f6b20616c7265616479207265676973746572656400000000000000000060448201526064015b60405180910390fd5b5f8381526007602090815260408083208054861515600160a01b810260ff60a01b19339081166001600160a81b031990941693909317178355600180840188905560058401805460ff191682179055828752600886528487208054918201815587529585902090950188905582519485529284018590529286917f126818ce0ab28a4bac6f9b83251326fea1417ebe29b827bfbcf2bb288f8f2bce91015b60405180910390a350505050565b6008602052815f5260405f2081815481106106d1575f80fd5b905f5260205f20015f91509150505481565b5f6001600160e01b03198216637965db0b60e01b148061071357506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f8281526020819052604090206001015461073381610f0a565b61073d8383610f14565b50505050565b6001600160a01b038116331461076c5760405163334bd91960e11b815260040160405180910390fd5b6107768282610fa3565b505050565b5f8051602061181683398151915261079281610f0a565b61079a61100c565b50565b5f805160206118168339815191526107b481610f0a565b6001600160a01b0382166107fd5760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420747265617375727960801b6044820152606401610603565b50600c80546001600160a01b0319166001600160a01b0392909216919091179055565b5f8051602061181683398151915261083781610f0a565b61079a61105e565b5f8051602061181683398151915261085681610f0a565b600c546001600160a01b03166108a15760405162461bcd60e51b815260206004820152601060248201526f151c99585cdd5c9e481b9bdd081cd95d60821b6044820152606401610603565b600d80545f909155600354600c5460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016020604051808303815f875af11580156108fb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061091f91906116d7565b61095f5760405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b6044820152606401610603565b5050565b5f918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b610993611099565b61099b610ee4565b5f82815260076020526040902060050154829060ff166109f35760405162461bcd60e51b8152602060048201526013602482015272109bdbdac8191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606401610603565b5f82118015610a1257505f838152600760205260409020600201548211155b610a505760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21031b430b83a32b960891b6044820152606401610603565b335f908152600b60209081526040808320868452825280832085845290915290205460ff1615610ab55760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481d5b9b1bd8dad95960821b6044820152606401610603565b6003546040516323b872dd60e01b81523360048201523060248201526706f05b59d3b2000060448201526001600160a01b03909116906323b872dd906064016020604051808303815f875af1158015610b10573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b3491906116d7565b610b715760405162461bcd60e51b815260206004820152600e60248201526d14185e5b595b9d0819985a5b195960921b6044820152606401610603565b335f908152600b6020908152604080832086845282528083208584529091529020805460ff19166001179055610bb083836706f05b59d3b200006110c1565b604080518381526706f05b59d3b20000602082015242818301529051849133917f45341ca1a8a9c574e8a596e69f90c67483c59be6420589c4a38de7246d764ff79181900360600190a35061095f6001600255565b5f80516020611816833981519152610c1c81610f0a565b81610c278486611706565b610c319190611706565b606414610c785760405162461bcd60e51b81526020600482015260156024820152740536861726573206d75737420746f74616c2031303605c1b6044820152606401610603565b50600492909255600555600655565b5f82815260208190526040902060010154610ca181610f0a565b61073d8383610fa3565b5f83815260076020526040902060050154839060ff16610d035760405162461bcd60e51b8152602060048201526013602482015272109bdbdac8191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606401610603565b5f848152600760205260409020546001600160a01b03163314610d685760405162461bcd60e51b815260206004820181905260248201527f4f6e6c792063757261746f722063616e20736574206174747269627574696f6e6044820152606401610603565b5f8311610db05760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b21031b430b83a32b910373ab6b132b960511b6044820152606401610603565b6001600160a01b038216610dff5760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420617574686f72206164647265737360501b6044820152606401610603565b5f84815260076020818152604080842087855260038101835290842080546001600160a01b0319166001600160a01b038816179055928790525260020154831115610e58575f8481526007602052604090206002018390555b816001600160a01b0316847f097a8d04de3ade17206782496d5c87108e50e365c490b8cbc6ab611c17a4fc59856004545f67ffffffffffffffff811115610ea157610ea1611719565b604051908082528060200260200182016040528015610ed457816020015b6060815260200190600190039081610ebf5790505b506040516106aa9392919061172d565b60015460ff1615610f085760405163d93c066560e01b815260040160405180910390fd5b565b61079a81336114c3565b5f610f1f8383610963565b610f9c575f838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055610f543390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610713565b505f610713565b5f610fae8383610963565b15610f9c575f838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610713565b6110146114fc565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b611066610ee4565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611041565b60028054036110bb57604051633ee5aeb560e01b815260040160405180910390fd5b60028055565b5f83815260076020908152604080832085845260038101909252909120546001600160a01b0316806110fa575080546001600160a01b03165b5f60646004548561110b91906117cc565b61111591906117e3565b90505f60646005548661112891906117cc565b61113291906117e3565b90505f816111408488611802565b61114a9190611802565b85549091506001600160a01b039081169085160361125a575f61116d8385611706565b60035460405163a9059cbb60e01b81526001600160a01b0388811660048301526024820184905292935091169063a9059cbb906044016020604051808303815f875af11580156111bf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111e391906116d7565b6112275760405162461bcd60e51b8152602060048201526015602482015274105d5d1a1bdc881c185e5b595b9d0819985a5b1959605a1b6044820152606401610603565b6001600160a01b0385165f908152600960205260408120805483929061124e908490611706565b90915550611426915050565b60035460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529091169063a9059cbb906044016020604051808303815f875af11580156112aa573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112ce91906116d7565b6113125760405162461bcd60e51b8152602060048201526015602482015274105d5d1a1bdc881c185e5b595b9d0819985a5b1959605a1b6044820152606401610603565b600354855460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303815f875af1158015611363573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061138791906116d7565b6113cc5760405162461bcd60e51b815260206004820152601660248201527510dd5c985d1bdc881c185e5b595b9d0819985a5b195960521b6044820152606401610603565b6001600160a01b0384165f90815260096020526040812080548592906113f3908490611706565b909155505084546001600160a01b03165f9081526009602052604081208054849290611420908490611706565b90915550505b80600d5f8282546114379190611706565b90915550505f888152600a602052604081208054889290611459908490611706565b909155505084546040805189815260208101869052908101849052606081018390526001600160a01b03918216918616908a907f87e54876e9f63adfe52b0d8e4def617b2cd2d82c18124b3fa64f7adb643546999060800160405180910390a45050505050505050565b6114cd8282610963565b61095f5760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610603565b60015460ff16610f0857604051638dfc202b60e01b815260040160405180910390fd5b801515811461079a575f80fd5b5f805f6060848603121561153e575f80fd5b8335925060208401356115508161151f565b929592945050506040919091013590565b80356001600160a01b0381168114611577575f80fd5b919050565b5f806040838503121561158d575f80fd5b61159683611561565b946020939093013593505050565b5f602082840312156115b4575f80fd5b81356001600160e01b0319811681146115cb575f80fd5b9392505050565b5f602082840312156115e2575f80fd5b5035919050565b5f80604083850312156115fa575f80fd5b50508035926020909101359150565b5f806040838503121561161a575f80fd5b8235915061162a60208401611561565b90509250929050565b5f60208284031215611643575f80fd5b6115cb82611561565b5f805f6060848603121561165e575f80fd5b505081359360208301359350604090920135919050565b5f805f60608486031215611687575f80fd5b61169084611561565b95602085013595506040909401359392505050565b5f805f606084860312156116b7575f80fd5b83359250602084013591506116ce60408501611561565b90509250925092565b5f602082840312156116e7575f80fd5b81516115cb8161151f565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610713576107136116f2565b634e487b7160e01b5f52604160045260245ffd5b5f60608201858352602085818501526060604085015281855180845260808601915060808160051b87010193508287015f805b838110156117bc57888703607f1901855282518051808952835b81811015611795578281018901518a82018a0152880161177a565b508881018801849052601f01601f1916909701860196509385019391850191600101611760565b50949a9950505050505050505050565b8082028115828204841417610713576107136116f2565b5f826117fd57634e487b7160e01b5f52601260045260245ffd5b500490565b81810381811115610713576107136116f256fea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220d0d65f46d434a1c4a39ba9cc84c0c31a5f1bd369128ac3e3192ce72be165859864736f6c63430008140033'

async function main() {
  if (!process.env.HYBRID_ADMIN_PRIVATE_KEY) {
    console.error('❌ HYBRID_ADMIN_PRIVATE_KEY not found in .env.local')
    console.error('Please uncomment the HYBRID_ADMIN_PRIVATE_KEY line in apps/backend/.env.local')
    process.exit(1)
  }

  const provider = new ethers.JsonRpcProvider(STORY_RPC_URL)
  const wallet = new ethers.Wallet(process.env.HYBRID_ADMIN_PRIVATE_KEY, provider)
  
  console.log('🚀 Deploying HybridRevenueControllerV2 (Standalone)')
  console.log('='.repeat(70))
  console.log('Deployer:', wallet.address)
  console.log('Network: Story Protocol Testnet (Chain ID: 1315)')
  console.log('TIP Token:', TIP_TOKEN_ADDRESS)
  console.log('='.repeat(70))

  try {
    // Create contract factory
    const factory = new ethers.ContractFactory(ABI, BYTECODE, wallet)
    
    // Deploy the contract
    console.log('\n📝 Deploying contract...')
    const contract = await factory.deploy(wallet.address, TIP_TOKEN_ADDRESS)
    
    console.log('Transaction hash:', contract.deploymentTransaction()?.hash)
    console.log('\n⏳ Waiting for confirmation...')
    
    // Wait for deployment
    await contract.waitForDeployment()
    const contractAddress = await contract.getAddress()
    
    console.log('\n✅ SUCCESS! HybridRevenueControllerV2 deployed at:', contractAddress)
    
    // Save deployment info
    const deploymentInfo = {
      contractName: 'HybridRevenueControllerV2',
      address: contractAddress,
      deployer: wallet.address,
      tipToken: TIP_TOKEN_ADDRESS,
      transactionHash: contract.deploymentTransaction()?.hash,
      timestamp: new Date().toISOString(),
      network: 'story-testnet',
      chainId: 1315,
    }

    const deploymentPath = path.join(__dirname, 'hybrid-v2-deployment.json')
    fs.writeFileSync(deploymentPath, JSON.stringify(deploymentInfo, null, 2))
    
    console.log('\n📄 Deployment info saved to:', deploymentPath)
    console.log('\n🎯 Next Steps:')
    console.log('1. Update apps/backend/.env.local with:')
    console.log(`   HYBRID_REVENUE_CONTROLLER_V2_ADDRESS=${contractAddress}`)
    console.log('2. Update apps/frontend/.env.local with the same address')
    console.log('3. Update contract configurations in the codebase')
    console.log('4. Test book registration through the frontend')
    console.log('5. Verify revenue distribution works correctly')
    
  } catch (error) {
    console.error('❌ Deployment failed:', error)
    process.exit(1)
  }
}

main()
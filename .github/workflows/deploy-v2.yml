name: 🚀 Deploy V2 to Testnet (testnet-v2.storyhouse.vip)

on:
  workflow_dispatch:
    inputs:
      deploy_frontend:
        description: 'Deploy frontend-v2'
        required: false
        default: true
        type: boolean
      deploy_backend:
        description: 'Deploy backend-v2'
        required: false
        default: true
        type: boolean
  push:
    branches:
      - v2
    paths:
      - 'apps/frontend-v2/**'
      - 'apps/backend-v2/**'
      - 'packages/shared-v2/**'

jobs:
  # Job to detect which apps have changes
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend-changed: ${{ steps.changes.outputs.frontend }}
      backend-changed: ${{ steps.changes.outputs.backend }}
      shared-changed: ${{ steps.changes.outputs.shared }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            frontend:
              - 'apps/frontend-v2/**'
              - 'packages/shared-v2/**'
            backend:
              - 'apps/backend-v2/**'
              - 'packages/shared-v2/**'
            shared:
              - 'packages/shared-v2/**'

  # Deploy frontend-v2
  deploy-frontend-v2:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: |
      (github.event_name == 'workflow_dispatch' && inputs.deploy_frontend) ||
      (github.event_name == 'push' && needs.detect-changes.outputs.frontend-changed == 'true')
    environment: 
      name: frontend-v2-testnet
      url: https://testnet-v2.storyhouse.vip
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Cache builds
        uses: actions/cache@v4
        with:
          path: |
            apps/frontend-v2/.next/cache
            apps/frontend-v2/.next/standalone
            packages/shared-v2/dist
            packages/shared-v2/tsconfig.tsbuildinfo
          key: build-frontend-v2-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            build-frontend-v2-${{ runner.os }}-

      - name: Setup frontend-v2 app
        run: |
          cd apps/frontend-v2
          # Initialize Next.js app if not already done
          if [ ! -f "package.json" ]; then
            npx create-next-app@latest . --typescript --tailwind --app --no-src-dir --import-alias "@/*"
            # Add necessary dependencies
            npm install @story-protocol/core-sdk viem wagmi @rainbow-me/rainbowkit
          fi

      - name: Install root dependencies
        run: npm install

      - name: Build shared-v2 packages
        run: |
          cd packages/shared-v2
          # Initialize package if needed
          if [ ! -f "package.json" ]; then
            npm init -y
            npm install --save-dev typescript @types/node
            echo '{"compilerOptions":{"outDir":"./dist","module":"commonjs","target":"es2020","lib":["es2020"],"declaration":true,"strict":true,"esModuleInterop":true,"skipLibCheck":true,"forceConsistentCasingInFileNames":true}}' > tsconfig.json
          fi
          npm run build || npx tsc || echo "No build needed for shared-v2"

      - name: Install frontend-v2 dependencies
        run: |
          cd apps/frontend-v2
          npm install

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Build Frontend-v2 with Next.js
        run: |
          cd apps/frontend-v2
          npm run build || echo "Build step not configured yet"
        env:
          NEXT_PUBLIC_ENVIRONMENT: testnet-v2
          NEXT_PUBLIC_STORY_NETWORK: testnet
          NEXT_PUBLIC_API_URL: https://testnet-v2-api.storyhouse.vip

      - name: Deploy to Vercel (testnet-v2.storyhouse.vip)
        id: deploy
        run: |
          cd apps/frontend-v2
          # Clean any existing Vercel config
          rm -rf .vercel
          
          # Deploy to testnet-v2.storyhouse.vip
          # The domain should be configured in Vercel dashboard
          url=$(vercel deploy --prod --yes --token=${{ secrets.STORYHOUSE_GHA_VERCEL }} --scope team_BsORABKeULvzhE8sYWJSopdD)
          echo "Deployed to: $url"
          echo "preview-url=$url" >> $GITHUB_OUTPUT

  # Deploy backend-v2
  deploy-backend-v2:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: |
      (github.event_name == 'workflow_dispatch' && inputs.deploy_backend) ||
      (github.event_name == 'push' && needs.detect-changes.outputs.backend-changed == 'true')
    environment: 
      name: backend-v2-testnet
      url: https://testnet-v2-api.storyhouse.vip
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Cache builds
        uses: actions/cache@v4
        with:
          path: |
            apps/backend-v2/.next/cache
            apps/backend-v2/.next/standalone
            packages/shared-v2/dist
            packages/shared-v2/tsconfig.tsbuildinfo
          key: build-backend-v2-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            build-backend-v2-${{ runner.os }}-

      - name: Setup backend-v2 app
        run: |
          cd apps/backend-v2
          # Initialize Next.js API app if not already done
          if [ ! -f "package.json" ]; then
            npm init -y
            npm install next@latest react@latest react-dom@latest typescript @types/node @types/react
            # Create minimal Next.js API structure
            mkdir -p app/api
            echo '{"name":"backend-v2","scripts":{"dev":"next dev -p 3002","build":"next build","start":"next start"}}' > package.json
          fi

      - name: Install root dependencies
        run: npm install

      - name: Build shared-v2 packages
        run: |
          cd packages/shared-v2
          if [ ! -f "package.json" ]; then
            npm init -y
            npm install --save-dev typescript @types/node
          fi
          npm run build || npx tsc || echo "No build needed for shared-v2"

      - name: Bundle shared-v2 package with backend
        run: |
          echo "Copying built shared-v2 package to backend..."
          mkdir -p apps/backend-v2/shared-bundle
          if [ -d "packages/shared-v2/dist" ]; then
            cp -r packages/shared-v2/dist/* apps/backend-v2/shared-bundle/
          fi
          if [ -f "packages/shared-v2/package.json" ]; then
            cp packages/shared-v2/package.json apps/backend-v2/shared-bundle/
          fi

      - name: Install backend-v2 dependencies
        run: |
          cd apps/backend-v2
          npm install

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Build Backend-v2 with Next.js
        run: |
          cd apps/backend-v2
          npm run build || echo "Build step not configured yet"
        env:
          NODE_ENV: production
          STORY_NETWORK: testnet

      - name: Deploy to Vercel (testnet-v2-api.storyhouse.vip)
        id: deploy
        run: |
          cd apps/backend-v2
          # Clean any existing Vercel config
          rm -rf .vercel
          
          # Deploy to testnet-v2-api.storyhouse.vip
          # The domain should be configured in Vercel dashboard
          url=$(vercel deploy --prod --yes --token=${{ secrets.STORYHOUSE_GHA_VERCEL }} --scope team_BsORABKeULvzhE8sYWJSopdD)
          echo "Deployed to: $url"
          echo "preview-url=$url" >> $GITHUB_OUTPUT

  # Summary job
  deployment-summary:
    runs-on: ubuntu-latest
    needs: [deploy-frontend-v2, deploy-backend-v2]
    if: always()
    steps:
      - name: Summary
        run: |
          echo "## 🚀 V2 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.deploy-frontend-v2.result }}" == "success" ]]; then
            echo "✅ Frontend-v2 deployed to: https://testnet-v2.storyhouse.vip" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.deploy-frontend-v2.result }}" == "skipped" ]]; then
            echo "⏭️ Frontend-v2 deployment skipped (no changes)" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Frontend-v2 deployment failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.deploy-backend-v2.result }}" == "success" ]]; then
            echo "✅ Backend-v2 deployed to: https://testnet-v2-api.storyhouse.vip" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.deploy-backend-v2.result }}" == "skipped" ]]; then
            echo "⏭️ Backend-v2 deployment skipped (no changes)" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Backend-v2 deployment failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 **V2 Testnet Links:**" >> $GITHUB_STEP_SUMMARY
          echo "- Frontend: https://testnet-v2.storyhouse.vip" >> $GITHUB_STEP_SUMMARY
          echo "- Backend API: https://testnet-v2-api.storyhouse.vip" >> $GITHUB_STEP_SUMMARY
          echo "- Branch: v2" >> $GITHUB_STEP_SUMMARY
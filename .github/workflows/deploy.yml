name: ðŸš€ Deploy to Vercel (Manual/PR)

on:
  workflow_dispatch:
    inputs:
      deploy_frontend:
        description: 'Deploy frontend'
        required: false
        default: true
        type: boolean
      deploy_backend:
        description: 'Deploy backend'
        required: false
        default: true
        type: boolean
  pull_request:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID_FRONTEND: ${{ secrets.VERCEL_PROJECT_ID_FRONTEND }}
  VERCEL_PROJECT_ID_BACKEND: ${{ secrets.VERCEL_PROJECT_ID_BACKEND }}

jobs:
  # Job to detect which apps have changes
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend-changed: ${{ steps.changes.outputs.frontend }}
      backend-changed: ${{ steps.changes.outputs.backend }}
      shared-changed: ${{ steps.changes.outputs.shared }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            frontend:
              - 'apps/frontend/**'
              - 'packages/shared/**'
            backend:
              - 'apps/backend/**'
              - 'packages/shared/**'
            shared:
              - 'packages/shared/**'

  # Build and deploy frontend
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: (github.event_name == 'workflow_dispatch' && inputs.deploy_frontend) || (github.event_name == 'pull_request' && needs.detect-changes.outputs.frontend-changed == 'true')
    environment: 
      name: frontend-production
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build shared package
        run: npm run build --workspace=@storyhouse/shared

      - name: Build frontend
        run: npm run build --workspace=@storyhouse/frontend
        env:
          NODE_ENV: production

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy Frontend to Vercel
        id: deploy
        run: |
          url=$(vercel deploy --prod --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "url=$url" >> $GITHUB_OUTPUT
        working-directory: ./apps/frontend
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_FRONTEND }}

  # Build and deploy backend
  deploy-backend:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: (github.event_name == 'workflow_dispatch' && inputs.deploy_backend) || (github.event_name == 'pull_request' && needs.detect-changes.outputs.backend-changed == 'true')
    environment: 
      name: backend-production
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build shared package
        run: npm run build --workspace=@storyhouse/shared

      - name: Build backend
        run: npm run build --workspace=@storyhouse/backend
        env:
          NODE_ENV: production

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy Backend to Vercel
        id: deploy
        run: |
          url=$(vercel deploy --prod --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "url=$url" >> $GITHUB_OUTPUT
        working-directory: ./apps/backend
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_BACKEND }}

  # Preview deployments for PRs
  deploy-preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy Frontend Preview
        run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./apps/frontend
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_FRONTEND }}

      - name: Deploy Backend Preview
        run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./apps/backend
        env:
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_BACKEND }}